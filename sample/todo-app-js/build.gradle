if (!isTargetEnabled(Target.JS_LEGACY)) {
    return
}

plugins.apply("org.jetbrains.kotlin.js")

kotlin {
    js(IR) {
        browser {
            binaries.executable()
        }
    }
}

def version_suffix = "pre.213-kotlin-$kotlinVersion" // for kotlin-wrappers
def kotlin_react_version = "17.0.2-$version_suffix"
def kotlin_styled_version = "5.3.0-$version_suffix"
def muirwik_version = "0.8.0"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"

    implementation "org.jetbrains.kotlin-wrappers:kotlin-react:$kotlin_react_version"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-react-dom:$kotlin_react_version"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-styled:$kotlin_styled_version"

    implementation "org.jetbrains.kotlin-wrappers:kotlin-extensions:1.0.1-$version_suffix"

    implementation "com.ccfraser.muirwik:muirwik-components:$muirwik_version"

    implementation project(":rx")
    implementation project(":keepers")
    implementation project(":mvikotlin")
    implementation project(":mvikotlin-main")
    implementation project(":mvikotlin-logging")
    implementation project(":mvikotlin-timetravel")
    implementation project(":sample:todo-reaktive")
    implementation project(":sample:todo-coroutines")

    implementation npm("core-js", "2.6.5")
    implementation npm("svg-inline-loader", "0.8.0")
    implementation npm("react", "16.13.0")
    implementation npm("react-dom", "16.13.0")
    implementation npm("react-is", "16.13.0")
    implementation npm("inline-style-prefixer", "5.1.0")
    implementation npm("styled-components", "4.3.2")
    implementation npm("@material-ui/core", "4.9.14")
    implementation npm("@material-ui/icons", "4.9.1")
}
